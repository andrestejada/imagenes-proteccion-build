{"version":3,"sources":["helpers/helper.js","components/ContenedorImg.js","components/ContenedorListaImg.js","components/Formulario.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["calcularRatio","ancho","alto","ContenedorImg","imagen","useState","anchoimg","actualizarAnchoImg","altoimg","actualizarAltoImg","nuevoanchoimg","guardarNuevoAnchoImg","nuevoaltoimg","guardarNuevoAltoImg","orientacion","guardarOrientacion","useEffect","compararDimesiones","altoPagina","ratio","nuevoAltoImg","parseInt","nuevoAnchoImg","console","log","className","src","onLoad","e","target","naturalWidth","naturalHeight","ContenedorListaImg","imagenes","map","index","Formulario","guardarImagenes","htmlFor","type","name","id","accept","required","multiple","onChange","archivos","files","arreglo","archivo","reader","FileReader","onload","result","readAsDataURL","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab300095.chunk.js","sourcesContent":["export const calcularRatio = (ancho, alto) => {\r\n  const ratio = ancho / alto\r\n  return ratio\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { calcularRatio } from '../helpers/helper'\r\n\r\nconst ContenedorImg = ({ imagen }) => {\r\n  //State para guardar los tamaños originales\r\n  const [anchoimg, actualizarAnchoImg] = useState(0)\r\n  const [altoimg, actualizarAltoImg] = useState(0)\r\n\r\n  //state para guardar los nuevos tamaños de la img\r\n  const [nuevoanchoimg, guardarNuevoAnchoImg] = useState(0)\r\n  const [nuevoaltoimg, guardarNuevoAltoImg] = useState(0)\r\n\r\n  //state guarda la orientacion ideal\r\n  const [orientacion, guardarOrientacion] = useState('vertical')\r\n\r\n  //captura las dimensiones de la img original y las guardo en el state\r\n  const onchangeImg = e => {\r\n    actualizarAnchoImg(e.target.naturalWidth)\r\n    actualizarAltoImg(e.target.naturalHeight)\r\n  }\r\n\r\n  // UseEfect para llamar la comparacion de las dimensiones cada ves que se actulize el ancho img\r\n  useEffect(() => {\r\n    compararDimesiones()\r\n  }, [anchoimg])\r\n\r\n  //fuction que compara las dimensiones de la img y hace los calculos para dar orientacion y nuevas dimensiones de la img\r\n\r\n  const compararDimesiones = () => {\r\n    const anchoPagina = 796\r\n    const altoPagina = 1123\r\n\r\n    if (\r\n      (anchoimg >= anchoPagina && anchoimg >= altoPagina) ||\r\n      (altoimg >= altoPagina && altoimg >= anchoPagina)\r\n    ) {\r\n      if (anchoimg > altoimg) {\r\n        const ratio = calcularRatio(anchoimg, altoimg)\r\n        const nuevoAnchoImg = 1123\r\n        const nuevoAltoImg = parseInt(nuevoAnchoImg / ratio)\r\n\r\n        guardarOrientacion('Horizontal')\r\n        guardarNuevoAltoImg(nuevoAltoImg)\r\n        guardarNuevoAnchoImg(nuevoAnchoImg)\r\n      } else if (anchoimg === altoimg) {\r\n        const nuevoAnchoImg = 796\r\n        const nuevoAltoImg = nuevoAnchoImg\r\n        guardarOrientacion('Vertical')\r\n        guardarNuevoAnchoImg(nuevoAnchoImg)\r\n        guardarNuevoAltoImg(nuevoAltoImg)\r\n      } else {\r\n        const ratio = calcularRatio(anchoimg, altoimg)\r\n        const nuevoAltoImg = 1123\r\n        const nuevoAnchoImg = parseInt(nuevoAltoImg * ratio)\r\n        guardarOrientacion('Vertical')\r\n        guardarNuevoAnchoImg(nuevoAnchoImg)\r\n        guardarNuevoAltoImg(nuevoAltoImg)\r\n      }\r\n    } else if (anchoimg > anchoPagina && anchoimg < altoPagina) {\r\n      guardarNuevoAnchoImg(anchoimg)\r\n      guardarNuevoAltoImg(altoimg)\r\n\r\n      guardarOrientacion('Horizontal')\r\n\r\n      console.log('horizontal')\r\n    } else {\r\n      guardarOrientacion('Vertical')\r\n      guardarNuevoAnchoImg(anchoimg)\r\n      guardarNuevoAltoImg(altoimg)\r\n    }\r\n  }\r\n\r\n  if (imagen === '') return null\r\n\r\n  return (\r\n    <div className='bg-light mt-4 mb-4  mx-3 col col-md-5 col-lg-5'>\r\n      <div className='row rounded'>\r\n        <div className='col-md-6 p-0'>\r\n          <h3 className='bg-primary text-center p-2 m-0 text-white'>\r\n            Imagen Previa\r\n          </h3>\r\n          <img className='imgpreview' src={imagen} onLoad={onchangeImg} />\r\n        </div>\r\n\r\n        <div className='col-md-6 bg-dark'>\r\n          <h4 className='titulo-img text-primary'>\r\n            Medidas de la Imagen Original\r\n          </h4>\r\n          <p>El ancho original de la imagen es de : {anchoimg} px </p>\r\n          <p>El alto original de la imagen es de : {altoimg} px </p>\r\n          <h4 className='titulo-img text-primary'>\r\n            Recomendaciones de la Imagen\r\n          </h4>\r\n          <p>La orientacion debe ser : {orientacion} </p>\r\n          <p>El ancho de la imagen debe ser: {nuevoanchoimg} px </p>\r\n          <p>El alto de la imagen debe ser: {nuevoaltoimg} px </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContenedorImg\r\n","import React from 'react'\r\nimport ContenedorImg from './ContenedorImg'\r\n\r\nconst ContenedorListaImg = ({ imagenes }) => {\r\n  if (imagenes === null) return null\r\n\r\n  return (\r\n    <div className='row justify-content-md-center justify-content-lg-center'>\r\n      {imagenes.map((imagen, index) => (\r\n        <ContenedorImg imagen={imagen} key={index} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContenedorListaImg\r\n","import React, { useState } from 'react'\r\nimport ContenedorListaImg from './ContenedorListaImg'\r\n\r\nconst Formulario = () => {\r\n  const [imagenes, guardarImagenes] = useState(null)\r\n  //esta funcion realiza el preview de la imagen y la pasa de ser un archivo a ser una img\r\n  const onChangeFile = e => {\r\n    const archivos = e.target.files\r\n\r\n    let arreglo = []\r\n    for (let archivo of archivos) {\r\n      const reader = new FileReader()\r\n\r\n      reader.onload = () => {\r\n        arreglo = [...arreglo, reader.result]\r\n        guardarImagenes(arreglo)\r\n      }\r\n\r\n      reader.readAsDataURL(archivo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row justify-content-md-center'>\r\n        <form className=' col-md-6 bg-light rounded'>\r\n          <div className='form-group'>\r\n            <label\r\n              className='d-block text-center font-weight-bold'\r\n              htmlFor='uploadImg'\r\n            >\r\n              Sube una imagen en formato .jpg\r\n            </label>\r\n            <input\r\n              type='file'\r\n              name='imagen'\r\n              id='uploadImg'\r\n              className='form-control-file'\r\n              accept='.jpg'\r\n              required\r\n              multiple\r\n              onChange={onChangeFile}\r\n            />\r\n          </div>\r\n          <button type='submit' className='btn btn-primary btn-block mb-3'>\r\n            Subir Imagenes\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {<ContenedorListaImg imagenes={imagenes} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Formulario\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <h1 className='text-white text-center bg-primary py-2'>Carga tus Imagenes</h1>\r\n     );\r\n}\r\n \r\nexport default Header;","import React  , {Fragment}from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Formulario from './components/Formulario'\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n\n    <Fragment>\n      <Header/>\n      <Formulario/>      \n    </Fragment>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}